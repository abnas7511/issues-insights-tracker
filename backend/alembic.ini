# A generic, single database configuration.
[alembic]
script_location = alembic
prepend_sys_path = .
sqlalchemy.url = postgresql://postgres:password@db:5432/issues_tracker

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# Uncomment the line below if you want the files to be prepended with date and time
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding `alembic[tz]` to the pip requirements
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version number format.  This value may be specified
# in several ways:
#
# 1. A string value, in which case this is the format for the
#    "version_num" field used in the migration file name.
#    The default value is "%%(rev)s".
#
# 2. A callable, which will be passed the config object and
#    should return a string value.
#
# 3. A tuple of strings, which will be used as a format string
#    for the "version_num" field, with the first element being
#    the format string and the remaining elements being the
#    arguments to the format string.
#
# version_num_format = %%(rev)s

# version path separator; As mentioned above, this is the character used to split
# version_num_format = %%(rev)s

# the output of file_template is used to generate the file name of the migration script.
# the default value is %%(rev)s_%%(slug)s
# file_template = %%(rev)s_%%(slug)s

# set to 'true' to generate the script using the current head as the up revision
# identifier, and the given identifier as the down revision identifier.
# revision_environment = false

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S